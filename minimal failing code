#include <vcc.h>
#include "s2n_blob.h"

#define SYSTEM_PAGE_SIZE() 394857
#define page_size  4096

int s2n_realloc(struct s2n_blob *b, uint32_t size)
       _(requires \wrapped(b))
       _(requires size < _UI32_MAX - SYSTEM_PAGE_SIZE())
       _(writes b)
       ;

int s2n_realloc(struct s2n_blob *b, uint32_t size)
{
    _(assume b->size && size && size>b->allocated)
    uint32_t allocate = page_size * ((size + (page_size - 1)) / page_size);
    _(unwrap b)
    _(unwrap blob_data(b))
    uint8_t *data = malloc(sizeof (uint8_t) *(b->size));
    if(data==NULL) return -1;
    memcpy(data, b->data, b->size);
    _(wrap blob_data(b))
    _(wrap b) 
    s2n_free(b);
    b->data = data;
    b->size = size;
    b->allocated = allocate;
    _(wrap blob_data(b))
    return 0;
}

 
int s2n_free(struct s2n_blob *b)
       //_(requires memory_initialized())
       _(requires \wrapped(b))
       _(writes b)
       _(ensures \old(b->user_allocated && b->allocated) ==> \wrapped(\old(blob_data(b))))
       _(ensures \old(b->user_allocated) ==> \forall size_t i; i < \old(b->size) ==> \old(b->data)[i] == \old(b->val[i]))
       ;
